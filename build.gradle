plugins {
	id 'java'
	id 'war'
	id 'jacoco'
	id 'org.flywaydb.flyway' version '9.16.3'
	id 'io.freefair.lombok' version '8.0.1'
	id "org.sonarqube" version "4.2.1.3168"
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}



flyway {
	url = 'jdbc:mysql://localhost:3306/gs'
	user = 'root'
	password='x2Aht9LND6g3'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.1.7.Final'
	compileOnly 'org.hibernate:hibernate-jpamodelgen:6.1.7.Final'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-web:6.1.1'
	implementation 'org.springframework.security:spring-security-config:6.1.1'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server:6.1.1'
	implementation 'org.springframework.security:spring-security-oauth2-jose:6.1.1'
	implementation 'org.springframework.security:spring-security-oauth2-client:6.1.1'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.zaxxer:HikariCP:5.0.1'
	implementation 'org.hibernate.orm:hibernate-core:6.2.3.Final'
	implementation 'org.hibernate:hibernate-validator:8.0.0.Final'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework:spring-orm:6.0.9'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'

	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.google.code.gson:gson:2.10.1'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

war {
    archiveName = 'gc-app.war'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.example.gc.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}
